# sudo for docker
sudo: true
os: linux
dist: xenial
language: java
install: true

cache:
  directories:
    - $HOME/.m2/repository
    - docker_cached

stages:
  - building
  - testing
  - release

# install qemu-user before running docker build
before_install:
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - sudo docker run --privileged linuxkit/binfmt:v0.6
  - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform linux/armhf --oci-worker-platform linux/arm64
  - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
  - export BUILDKIT_HOST=tcp://0.0.0.0:1234
#  - ./.travis/configure_docker.sh
#  - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features install: true

jobs:
  include:
        - stage: building

          ### x86 Docker images
          install:
          - ./.travis/configure_docker.sh #upgrading docker
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script:
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & 
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo-amd64:latest --platform amd64 > output
          - docker save --output docker_cached/spring-boot-websocket-chat-demo-amd64.tar spring-boot-websocket-chat-demo-amd64:latest

        - 
          ### armhf Docker images
          install:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script: 
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo-armhf:latest --platform armhf > output
          - docker save --output docker_cached/incplusplus/spring-boot-websocket-chat-demo-armhf.tar incplusplus/spring-boot-websocket-chat-demo-armhf:latest

        -
          ### arm64 Docker images
          install:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed

          script:
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo-arm64:latest --platform linux/arm64 > output
          - docker save --output docker_cached/spring-boot-websocket-chat-demo-arm64.tar ownyourbits/spring-boot-websocket-chat-demo-arm64:latest

        - stage: testing

          ### x86 Docker images
          install:
          - ./.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-amd64.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-amd64:latest ${IP}

          script:
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP}

        -
          ### armhf Docker images
          install:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-armhf.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-armhf:latest ${IP}

          script:
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP} 

        -
          ### arm64 Docker images
          install:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features      
          - export MOZ_HEADLESS=1
          - sudo apt-get install python3-pip
          - sudo python3 -m pip install selenium
          - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          - tar -xvzf geckodriver*
          - chmod +x geckodriver
          - export PATH=$PATH:$PWD
            
          before_script:
          - docker load --input docker_cached/nextcloudpi-arm64v8.tar
          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - docker run -d -p 4443:4443 -p 443:443 -p 80:80 -v ncdata:/data --name nextcloudpi ownyourbits/nextcloudpi-arm64v8:latest ${IP}

          script:
          - ./tests/activation_tests.py ${IP}
          - sleep 60
          - ./tests/nextcloud_tests.py ${IP}
          - sleep 5
          - ./tests/system_tests.py ncp@${IP} 
          
        - stage: release

          install:
          - ./.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features 
 
          before_script:
          - docker load --input docker_cached/spring-boot-websocket-chat-demo-amd64.tar

          - docker load --input docker_cached/spring-boot-websocket-chat-demo-armhf.tar

          - docker load --input docker_cached/spring-boot-websocket-chat-demo-arm64.tar

          - version=$(git describe --tags --always)
          - version=${version%-*-*}
          - echo ${version}

          script:
          - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

          ### x86 Docker images
          - docker tag ownyourbits/spring-boot-websocket-chat-demo-amd64:latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo-x86:"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo-x86:"${version}"

          ### armhf Docker images
          - docker tag ownyourbits/spring-boot-websocket-chat-demo-armhf:latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo-armhf:"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo-armhf:"${version}"

          ### arm64v8 Docker images
          - docker tag ownyourbits/spring-boot-websocket-chat-demo-arm64:latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo-arm64:"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo-arm64:"${version}"

          # Manifest

          - docker manifest create --amend $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo-x86 $DOCKER_USERNAME/spring-boot-websocket-chat-demo-armhf $DOCKER_USERNAME/spring-boot-websocket-chat-demo-arm64
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo-x86 --os linux --arch amd64
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo-armhf --os linux --arch arm
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo-arm64 --os linux --arch arm64


deploy:
  provider: script
  script: bash ./travis/deploy.sh
  skip_cleanup: true
  on:
    branch: travis-tomfoolery

notifications:
  email: false