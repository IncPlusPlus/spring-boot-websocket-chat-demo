# sudo for docker
sudo: true
os: linux
dist: xenial
language: java

cache:
  directories:
    - $HOME/.m2/repository
    - docker_cached

stages:
  - building
#  - testing
  - release

# install qemu-user before running docker build
before_install:
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - sudo docker run --privileged linuxkit/binfmt:v0.6
  - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform linux/armhf --oci-worker-platform linux/arm64
  - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
  - export BUILDKIT_HOST=tcp://0.0.0.0:1234
#  - ./.travis/configure_docker.sh
#  - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features install: true

jobs:
  include:
        - stage: building
          name: "Build amd64 Docker image"
          ### amd64 Docker images

          before_script:
          - ./.travis/configure_docker.sh #upgrading docker
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed
          - docker buildx ls

          script:
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo:amd64-latest --platform amd64 > output
          - docker save --output docker_cached/spring-boot-websocket-chat-demo-amd64.tar incplusplus/spring-boot-websocket-chat-demo:amd64-latest

        - 
          ### armhf Docker images
          name: "Build armhf Docker image"
          before_script:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed
          - docker buildx ls

          script: 
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo:armhf-latest --platform armhf > output
          - docker save --output docker_cached/spring-boot-websocket-chat-demo-armhf.tar incplusplus/spring-boot-websocket-chat-demo:armhf-latest

        -
          ### arm64 Docker images
          name: "Build arm64 Docker image"
          before_script:
          - sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
          - ./.travis/configure_docker.sh #upgrading docker and installing packages for arm architecture
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
          - docker version #Check Docker 18.09 is installed
          - docker buildx ls

          script:
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - docker buildx build . -t incplusplus/spring-boot-websocket-chat-demo:arm64-latest --platform linux/arm64 > output
          - docker save --output docker_cached/spring-boot-websocket-chat-demo-arm64.tar incplusplus/spring-boot-websocket-chat-demo:arm64-latest

#        - stage: testing
#
#          ### amd64 Docker images
#          name: "Test amd64 Docker image"
#          install:
#          - ./.travis/configure_docker.sh
#          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
#
#          before_script:
#          - ls docker_cached
#          - docker load --input docker_cached/spring-boot-websocket-chat-demo-amd64.tar
#          - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
#          - container_id=$(docker run -d -p 8080:8080 incplusplus/spring-boot-websocket-chat-demo:amd64-latest)
#          - echo "Container ID" $container_id
#
#          script:
#          - ./.travis/test_actuator.sh $container_id localhost 8080 /actuator/health
#
#          after_script:
#            - docker stop spring-boot-websocket-chat-demo
#
#        -
#          ### armhf Docker images
#          name: "Test armhf Docker image"
#          install:
#            - ./.travis/configure_docker.sh
#            - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
#
#          before_script:
#            - ls docker_cached
#            - docker load --input docker_cached/spring-boot-websocket-chat-demo-armhf.tar
#            - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
#            - container_id=$(docker run -d -p 8080:8080 incplusplus/spring-boot-websocket-chat-demo:armhf-latest)
#            - echo "Container ID" $container_id
#
#          script:
#            - ./.travis/test_actuator.sh $container_id localhost 8080 /actuator/health
#
#          after_script:
#            - docker stop spring-boot-websocket-chat-demo
#        -
#          ### arm64 Docker images
#          name: "Test arm64 Docker image"
#          install:
#            - ./.travis/configure_docker.sh
#            - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
#
#          before_script:
#            - ls docker_cached
#            - docker load --input docker_cached/spring-boot-websocket-chat-demo-arm64.tar
#            - IP=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
#            - container_id=$(docker run -d -p 8080:8080 incplusplus/spring-boot-websocket-chat-demo:arm64-latest)
#            - echo "Container ID" $container_id
#
#          script:
#            - ./.travis/test_actuator.sh $container_id localhost 8080 /actuator/health
#
#          after_script:
#            - docker stop spring-boot-websocket-chat-demo
          
        - stage: release

          install:
          - ./.travis/configure_docker.sh
          - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features 
 
          before_script:
          - docker load --input docker_cached/spring-boot-websocket-chat-demo-amd64.tar

          - docker load --input docker_cached/spring-boot-websocket-chat-demo-armhf.tar

          - docker load --input docker_cached/spring-boot-websocket-chat-demo-arm64.tar

          - version=$(git describe --tags --always)
          - version=${version%-*-*}
          - echo ${version}

          script:
          - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

          ### amd64 Docker images
          - docker tag $DOCKER_USERNAME/spring-boot-websocket-chat-demo:amd64-latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo:amd64-"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo:amd64-"${version}"

          ### armhf Docker images
          - docker tag $DOCKER_USERNAME/spring-boot-websocket-chat-demo:armhf-latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo:armhf-"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo:armhf-"${version}"

          ### arm64v8 Docker images
          - docker tag $DOCKER_USERNAME/spring-boot-websocket-chat-demo:arm64-latest $DOCKER_USERNAME/spring-boot-websocket-chat-demo:arm64-"${version}"
          - docker push $DOCKER_USERNAME/spring-boot-websocket-chat-demo:arm64-"${version}"

          # Manifest
          - echo Creating and pushing multi-arch manifest. Printing existing images
          - docker image ls
          - docker manifest create --amend $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo:amd64-"${version}" $DOCKER_USERNAME/spring-boot-websocket-chat-demo:armhf-"${version}" $DOCKER_USERNAME/spring-boot-websocket-chat-demo:arm64-"${version}"
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo:amd64-"${version}" --os linux --arch amd64
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo:armhf-"${version}" --os linux --arch arm
          - docker manifest annotate $DOCKER_USERNAME/spring-boot-websocket-chat-demo $DOCKER_USERNAME/spring-boot-websocket-chat-demo:arm64-"${version}" --os linux --arch arm64

env:
  global:
    - DOCKER_USERNAME="incplusplus"

#deploy:
#  provider: script
#  script: bash ./travis/deploy.sh
#  skip_cleanup: true
#  on:
#    branch: travis-tomfoolery

notifications:
  email: false